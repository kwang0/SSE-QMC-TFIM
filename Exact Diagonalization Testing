X1 = [0.0 1.0; 1.0 0.0]
Z1 = [1.0 0.0; 0.0 -1.0]
I1 = [1.0 0.0; 0.0 1.0]

N = 10
I_list = Array{Any}(N)
fill!(I_list, I1)


temp = deepcopy(I_list)
temp[1] = Z1
temp[2] = Z1
# op = sparse(kron(temp...))

H = 2 * sparse(kron(temp...))
for i in 1:N-2
    temp[i] = I1
    temp[i + 2] = Z1
    H = H + (2 * sparse(kron(temp...)))
end

temp = deepcopy(I_list)
temp[1] = X1
H = H - sparse(kron(temp...))
for i in 1:N-1
    temp[i] = I1
    temp[i + 1] = X1
    H = H - sparse(kron(temp...))
end

evals,evec = eigs(H, nev=1, which=:SR)

exact = Array{Any}(9)
temp = deepcopy(I_list)
temp[1] = Z1
temp[2] = Z1
op = sparse(kron(temp...))
exact[1] = (evec' * op  * evec)[1]

for i in 3:N
    temp[i-1] = I1
    temp[i] = Z1
    op = sparse(kron(temp...))
    exact[i - 1] = (evec' * op  * evec)[1]
end
